"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertIsES2015Instance = exports.assertIsInstance = exports.assertIsES2015Class = exports.assertIsClass = exports.ensureInstance = exports.ensureClass = exports.isES2015Instance = exports.isInstance = exports.isES2015Class = exports.isClass = void 0;
const object_1 = require("./object");
function isClass(value) {
    return typeof value === 'function' && object_1.hasOwnProperty(value, 'prototype');
}
exports.isClass = isClass;
function isES2015Class(value) {
    return (typeof value === 'function' &&
        object_1.hasOwnProperty(value, 'prototype') &&
        value.toString().startsWith('class ') === true);
}
exports.isES2015Class = isES2015Class;
function isInstance(value) {
    return object_1.isObjectLike(value) && isClass(value.constructor);
}
exports.isInstance = isInstance;
function isES2015Instance(value) {
    return object_1.isObjectLike(value) && isES2015Class(value.constructor);
}
exports.isES2015Instance = isES2015Instance;
function ensureClass(value) {
    if (isClass(value)) {
        return value;
    }
    if (isInstance(value)) {
        return value.constructor;
    }
    throw new Error(`Expected a class or an instance, but received a value of type '${typeof value}'`);
}
exports.ensureClass = ensureClass;
function ensureInstance(value) {
    if (isInstance(value)) {
        return value;
    }
    if (isClass(value)) {
        return value.prototype;
    }
    throw new Error(`Expected a class or an instance, but received a value of type '${typeof value}'`);
}
exports.ensureInstance = ensureInstance;
function assertIsClass(value) {
    if (!isClass(value)) {
        throw new Error(`Expected a class, but received a value of type '${typeof value}'`);
    }
}
exports.assertIsClass = assertIsClass;
function assertIsES2015Class(value) {
    if (!isES2015Class(value)) {
        throw new Error(`Expected an ES2015 class, but received a value of type '${typeof value}'`);
    }
}
exports.assertIsES2015Class = assertIsES2015Class;
function assertIsInstance(value) {
    if (!isInstance(value)) {
        throw new Error(`Expected an instance, but received a value of type '${typeof value}'`);
    }
}
exports.assertIsInstance = assertIsInstance;
function assertIsES2015Instance(value) {
    if (!isES2015Instance(value)) {
        throw new Error(`Expected an instance of an ES2015 class, but received a value of type '${typeof value}'`);
    }
}
exports.assertIsES2015Instance = assertIsES2015Instance;
//# sourceMappingURL=class.js.map